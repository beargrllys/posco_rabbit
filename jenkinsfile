pipeline {
    agent any
    environment {
        // Docker Hub의 사용자 이름과 비밀번호를 Jenkins 자격 증명 시스템에서 가져옴
        DOCKER_CREDENTIALS = credentials('dckr_pat_VXLpCzI_De-YUKcEisJSuy5DsFY')
    }
    stages {
        stage('pull repository') {
            steps {
                // Git 레포지토리를 클론합니다.
                git 'https://github.com/beargrllys/posco_rabbit.git'
            }
        }
        stage('build & push docker image') {
            steps {
                script {
                    // Docker 이미지 빌드
                    sh 'docker build -t posco-rabbit .'
                }
                script {
                    // Docker Hub에 푸쉬
                    sh "echo ${DOCKER_CREDENTIALS_PSW} | docker login -u ${DOCKER_CREDENTIALS_USR} --password-stdin"
                    sh 'docker tag posco-rabbit:latest js7744/posco-rabbit:latest'
                    sh 'docker push js7744/posco-rabbit:latest'
                }
            }
        }
        stage('deploy image') {
            steps {
                script {
                    // Docker 컨테이너 확인
                    sh '''
                    if docker ps -a | grep -q 'posco-rabbit-inst'; then
                        echo "posco-rabbit-inst 컨테이너가 존재합니다. 컨테이너를 삭제합니다."
                        docker rm -f posco-rabbit-inst
                    else
                        echo "posco-rabbit-inst 컨테이너가 존재하지 않습니다."
                    fi
                    '''
                }
                script {
                    sh 'docker run -d --name posco-rabbit-inst -p 9090:8080 posco-rabbit'
                }
            }
        }
    }
}